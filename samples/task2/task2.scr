/*
* ユーティリティに対してエンディアンの指定(GCCコンパイラに対しての指定はコンパイルオプションで行う)
* ディフォルト(指定なし)はリトルエンディアンである
* ビッグエンディアンで動かす場合は，GCCコンパイラにビッグエンディアン用のオプションとリンカオプション(-LEまたは-BE-32)を追加する
* ~armコンパイラオプション~
* 指定なし : リトルエンディアン
* -BE8 : ビッグエンディアン
* -BE32 : 従来(ARMv6以前)のビッグエンディアン
* ~armリンクオプション~
* -LE : リトルエンディアンでリンク
* -BE8 : ビッグエンディアンでリンク
* -BE-32 : 従来のビッグエンディアンでリンク
*/
OUTPUT_FORMAT("elf32-littlearm", "elf32-bigarm", "elf32-littlearm") /* 引数指定を行う場合は3つ記述 */
OUTPUT_ARCH(arm)                                                    /* 出力アーキテクチャの指定 */


/* MEMORYディレクティブ(区画と大きさ) */
MEMORY
{
  sharebuffer(rwx)  : o = 0x90005000, l = 0x00001000 /* temp(4096B) */
  dram(rwx)       : o = 0x90020000, l = 0x00010000 /* 64KB */
}

/*
* SECTIONディレクティブ
* 簡素化のためセクションは並べて定義
*/
SECTIONS
{
  .sharebuffer : {
    _sharebuffer_start = . ;
    *(.sharebuffer)
    . = ALIGN(4); /* アライメント調整 */
    _sharebuffer_end = . ;
  } > sharebuffer

  /* textセクション定義 */
  .text : {
    _text_start = . ;
    *(.text)
    . = ALIGN(4); /* アライメント調整 */
    _etext = . ;
  } > dram

  /* rodataセクション定義(定数値を格納するセクション) */
  .rodata : {
    _rodata_start = . ;
    *(.strings)
    *(.rodata)
    *(.rodata.*)
    _erodata = . ;
  } > dram

  /* dataセクション定義 */
  .data : {
    _data_start = . ;
    *(.data)
    . = ALIGN(4); /* アライメント調整 */
    _data_end = . ;
    _edata = . ;
  } > dram

  /* bssセクション定義 */
  .bss : {
    _bss_start = . ;
    *(.bss)
    *(COMMON)
    . = ALIGN(4); /* アライメント調整 */
    _bss_end = . ;
    _ebss = . ;
  } > dram

  . = ALIGN(4); /* アライメント調整 */
  _end = . ;

}
